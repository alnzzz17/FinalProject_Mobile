// Mocks generated by Mockito 5.4.5 from annotations
// in tpm_fp/test/mocks/mock_notifs_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tpm_fp/models/circuit_model.dart' as _i3;
import 'package:tpm_fp/models/schedule_model.dart' as _i5;
import 'package:tpm_fp/network/notification_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i2.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Circuit> get circuits => (super.noSuchMethod(
        Invocation.getter(#circuits),
        returnValue: <_i3.Circuit>[],
      ) as List<_i3.Circuit>);

  @override
  set circuits(List<_i3.Circuit>? _circuits) => super.noSuchMethod(
        Invocation.setter(
          #circuits,
          _circuits,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void setCircuits(List<_i3.Circuit>? circuits) => super.noSuchMethod(
        Invocation.method(
          #setCircuits,
          [circuits],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> scheduleRaceNotifications(_i5.Schedule? schedule) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleRaceNotifications,
          [schedule],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> cancelNotifications(int? baseId) => (super.noSuchMethod(
        Invocation.method(
          #cancelNotifications,
          [baseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
